#https://repost.aws/ja/knowledge-center/cloudformation-s3-notification-lambda
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >-
  Sample template to illustrate use of existing S3 bucket as an event source for a Lambda function

Globals:
  Function:
    Timeout: 300

Parameters:
  LineToken:
    Type: String
  S3Bucket:
    Type: String

Resources:
  LambdaIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetBucketNotification'
                  - 's3:PutBucketNotification'
                Resource: !Sub 'arn:aws:s3:::${S3Bucket}'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  MufgNotificationFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: mufg_notification/
      Handler: app.handler
      Runtime: python3.7
      Architectures:
        - x86_64
      MemorySize: 512
      Role: !GetAtt LambdaIAMRole.Arn
      Environment:
        Variables:
          LINE_TOKEN: !Ref LineToken
          S3_BUCKET: !Ref S3Bucket

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt MufgNotificationFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'
      SourceArn: !Sub 'arn:aws:s3:::${S3Bucket}'

  LambdaTrigger:
    Type: 'Custom::LambdaTrigger'
    DependsOn: LambdaInvokePermission
    Properties:
      ServiceToken: "arn:aws:lambda:ap-northeast-1:389670453211:function:mufg-scrape-lambda-MufgScrapeFunction-pOuVbiFibKnW"
      LambdaArn: !GetAtt MufgNotificationFunction.Arn
      Bucket: !Ref S3Bucket
      Prefix: "top_page"